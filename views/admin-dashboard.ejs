    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Admin Dashboard</title>
        <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    </head>
    <body class="bg-light">
        <!-- Bootstrap Navbar -->
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <div class="container">
                <a class="navbar-brand" href="#">Admin Dashboard</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/students">Student Details</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/rooms">Room Details</a>
                        </li>
                    </ul>
                </div>
                <div class="navbar-nav ml-auto">
                    <span class="navbar-text">
                        Hello, Admin
                    </span>
                    <img src="path/to/profile/image.png" alt="Profile Image" class="rounded-circle ml-2" style="width: 40px;">
                    <button class="btn btn-danger ml-3" onclick="logout()">Logout</button>
                </div>
            </div>
        </nav>

    <div class="container mt-4">
        <h1 class="text-primary text-center mb-4">Admin Dashboard</h1>

        <div class="row">
            <div class="col-md-4 mb-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Room Occupancy</h5>
                        <canvas id="roomOccupancyChart"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Gender Distribution</h5>
                        <canvas id="genderDistributionChart"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Students by Faculty</h5>
                        <canvas id="studentsByFacultyChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Room Preference</h5>
                        <canvas id="roomPreferenceChart"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Student Registration Over Time</h5>
                        <canvas id="studentRegistrationChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12 mb-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Room Type Distribution</h5>
                        <canvas id="roomTypeChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        async function fetchDashboardData() {
            try {
                const response = await fetch('/admin/dashboard-data');
                const data = await response.json();

                // Populate Room Occupancy Chart
                const roomOccupancyLabels = data.roomOccupancy.map(room => room.room_no);
                const roomOccupancyData = data.roomOccupancy.map(room => room.room_occupancy);
                const roomCapacityData = data.roomOccupancy.map(room => room.room_capacity);

                new Chart(document.getElementById('roomOccupancyChart'), {
                    type: 'bar',
                    data: {
                        labels: roomOccupancyLabels,
                        datasets: [{
                            label: 'Occupancy',
                            data: roomOccupancyData,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }, {
                            label: 'Capacity',
                            data: roomCapacityData,
                            backgroundColor: 'rgba(153, 102, 255, 0.2)',
                            borderColor: 'rgba(153, 102, 255, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });

                // Populate Gender Distribution Chart
                const genderLabels = data.genderDistribution.map(gender => gender.std_gender);
                const genderData = data.genderDistribution.map(gender => gender.count);

                new Chart(document.getElementById('genderDistributionChart'), {
                    type: 'pie',
                    data: {
                        labels: genderLabels,
                        datasets: [{
                            label: 'Gender Distribution',
                            data: genderData,
                            backgroundColor: ['rgba(54, 162, 235, 0.2)', 'rgba(255, 99, 132, 0.2)'],
                            borderColor: ['rgba(54, 162, 235, 1)', 'rgba(255, 99, 132, 1)'],
                            borderWidth: 1
                        }]
                    }
                });

                // Populate Students by Faculty Chart
                const facultyLabels = data.studentsByFaculty.map(faculty => faculty.std_faculty);
                const facultyData = data.studentsByFaculty.map(faculty => faculty.count);

                new Chart(document.getElementById('studentsByFacultyChart'), {
                    type: 'bar',
                    data: {
                        labels: facultyLabels,
                        datasets: [{
                            label: 'Number of Students',
                            data: facultyData,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });

                // Populate Room Preference Chart
                const prefLabels = data.roomPreference.map(pref => pref.std_pref);
                const prefData = data.roomPreference.map(pref => pref.count);

                new Chart(document.getElementById('roomPreferenceChart'), {
                    type: 'pie',
                    data: {
                        labels: prefLabels,
                        datasets: [{
                            label: 'Room Preference',
                            data: prefData,
                            backgroundColor: ['rgba(255, 206, 86, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 99, 132, 0.2)'],
                            borderColor: ['rgba(255, 206, 86, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 99, 132, 1)'],
                            borderWidth: 1
                        }]
                    }
                });

                // Populate Student Registration Over Time Chart
                const regDateLabels = data.studentRegistration.map(reg => reg.reg_date);
                const regDateData = data.studentRegistration.map(reg => reg.count);

                new Chart(document.getElementById('studentRegistrationChart'), {
                    type: 'line',
                    data: {
                        labels: regDateLabels,
                        datasets: [{
                            label: 'Registrations',
                            data: regDateData,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });

                // Populate Room Type Distribution Chart
                const roomTypeLabels = data.roomType.map(room => room.room_gender);
                const roomTypeData = data.roomType.map(room => room.count);

                new Chart(document.getElementById('roomTypeChart'), {
                    type: 'pie',
                    data: {
                        labels: roomTypeLabels,
                        datasets: [{
                            label: 'Room Type Distribution',
                            data: roomTypeData,
                            backgroundColor: ['rgba(153, 102, 255, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 99, 132, 0.2)'],
                            borderColor: ['rgba(153, 102, 255, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 99, 132, 1)'],
                            borderWidth: 1
                        }]
                    }
                });

            } catch (error) {
                console.error('Error fetching dashboard data:', error);
            }
        }

        // Fetch and render the dashboard data when the page loads
        fetchDashboardData();
    </script>
        <script>
            function logout() {
                // Clear any client-side authentication data if necessary
                // For example, you might want to clear cookies or localStorage items
                // localStorage.removeItem('authToken');
                window.location.href = '/admin-login.html';
            }
        </script>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
