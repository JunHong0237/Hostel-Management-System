    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Admin Dashboard</title>
        <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
        <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    </head>
    <body class="bg-light">
        <!-- Bootstrap Navbar -->
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <div class="container">
                <a class="navbar-brand" href="#">Admin Dashboard</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/students">Student Details</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/rooms">Room Details</a>
                        </li>
                    </ul>
                </div>
                <div class="navbar-nav ml-auto">
                    <span class="navbar-text">
                        Hello, Admin
                    </span>
                    <img src="path/to/profile/image.png" alt="Profile Image" class="rounded-circle ml-2" style="width: 40px;">
                    <button class="btn btn-danger ml-3" onclick="logout()">Logout</button>
                </div>
            </div>
        </nav>

        <!-- Charts Grid -->
        <div class="container mt-4">
            <div class="row">
                <div class="col-md-6">
                    <h3>Gender Distribution</h3>
                    <canvas id="genderDistributionChart"></canvas>
                </div>
                <div class="col-md-6">
                    <h3>Students by Faculty</h3>
                    <canvas id="studentsByFacultyChart"></canvas>
                </div>
                <div class="col-md-6">
                    <h3>Room Environment Preference</h3>
                    <canvas id="roomEnvironmentPreferenceChart"></canvas>
                </div>
                <div class="col-md-6">
                    <h3>Student Registration Over Time</h3>
                    <canvas id="studentRegistrationOverTimeChart"></canvas>
                </div>
                <div class="col-md-6">
                    <h3>Year of Degree</h3>
                    <canvas id="yearOfDegreeChart"></canvas>
                </div>
                <div class="col-md-6">
                    <h3>Room Type Distribution</h3>
                    <canvas id="roomTypeDistributionChart"></canvas>
                </div>
                <div class="col-md-6">
                    <h3>Room Occupancy</h3>
                    <canvas id="roomOccupancyChart"></canvas>
                </div>
                <div class="col-12">
                    <h3>State of Residence</h3>
                    <div id="stateOfResidenceMap" style="height: 500px;"></div>
                </div>
            </div>
        </div>



        
        <script>
          async function fetchChartData(url) {
            const response = await fetch(url);
            return await response.json();
          }

          // Gender Distribution Pie Chart
          async function renderGenderDistributionChart() {
            const data = await fetchChartData('/admin/gender-distribution');
            const labels = data.map(item => item.std_gender);
            const counts = data.map(item => item.count);
            new Chart(document.getElementById('genderDistributionChart'), {
              type: 'pie',
              data: {
                labels: labels,
                datasets: [{
                  label: 'Gender Distribution',
                  data: counts,
                  backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],
                }]
              }
            });
          }

          // Students by Faculty Bar Chart
          async function renderStudentsByFacultyChart() {
            const data = await fetchChartData('/admin/students-by-faculty');
            const labels = data.map(item => item.std_faculty);
            const counts = data.map(item => item.count);
            new Chart(document.getElementById('studentsByFacultyChart'), {
              type: 'bar',
              data: {
                labels: labels,
                datasets: [{
                  label: 'Number of Students',
                  data: counts,
                  backgroundColor: '#36A2EB',
                }]
              },
              options: {
                indexAxis: 'y',
                scales: {
                  x: {
                    beginAtZero: true
                  }
                }
              }
            });
          }

          // Room Environment Preference Pie Chart
          async function renderRoomEnvironmentPreferenceChart() {
            const data = await fetchChartData('/admin/room-environment-preference');
            const labels = data.map(item => item.std_pref);
            const counts = data.map(item => item.count);
            new Chart(document.getElementById('roomEnvironmentPreferenceChart'), {
              type: 'pie',
              data: {
                labels: labels,
                datasets: [{
                  label: 'Room Environment Preference',
                  data: counts,
                  backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],
                }]
              }
            });
          }

            // Student Registration Over Time Line Chart
              async function renderStudentRegistrationOverTimeChart() {
                const data = await fetchChartData('/admin/student-registration-over-time');
                const labels = data.map(item => item.date);
                const counts = data.map(item => item.count);
                new Chart(document.getElementById('studentRegistrationOverTimeChart'), {
                  type: 'line',
                  data: {
                    labels: labels,
                    datasets: [{
                      label: 'Registrations',
                      data: counts,
                      backgroundColor: 'rgba(75, 192, 192, 0.2)',
                      borderColor: 'rgba(75, 192, 192, 1)',
                      borderWidth: 1
                    }]
                  },
                  options: {
                    scales: {
                      x: {
                        type: 'time',
                        time: {
                          unit: 'day',
                          tooltipFormat: 'yyyy-MM-dd',
                          displayFormats: {
                            day: 'yyyy-MM-dd'
                          }
                        }
                      },
                      y: {
                        beginAtZero: true
                      }
                    }
                  }
                });
              }

          // Year of Degree Column Chart
          async function renderYearOfDegreeChart() {
            const data = await fetchChartData('/admin/year-of-degree');
            const labels = data.map(item => item.std_year);
            const counts = data.map(item => item.count);
            new Chart(document.getElementById('yearOfDegreeChart'), {
              type: 'bar',
              data: {
                labels: labels,
                datasets: [{
                  label: 'Number of Students',
                  data: counts,
                  backgroundColor: '#36A2EB',
                }]
              },
              options: {
                scales: {
                  y: {
                    beginAtZero: true
                  }
                }
              }
            });
          }
            // Room type distribution Chart
              async function renderRoomTypeDistributionChart() {
                const data = await fetchChartData('/admin/room-type-distribution');
                const capacities = ['1', '2', '4'];
                const genders = ['Male', 'Female'];
                const datasets = genders.map(gender => {
                  return {
                    label: gender,
                    data: capacities.map(capacity => {
                      const item = data.find(d => d.room_capacity == capacity && d.room_gender === gender);
                      return item ? item.count : 0;
                    }),
                    backgroundColor: gender === 'Male' ? '#36A2EB' : '#FF6384',
                  };
                });
                new Chart(document.getElementById('roomTypeDistributionChart'), {
                  type: 'bar',
                  data: {
                    labels: capacities,
                    datasets: datasets,
                  },
                  options: {
                    scales: {
                      x: { stacked: true },
                      y: { stacked: true },
                    }
                  }
                });
              }

            // Room occupancy Chart
              async function renderRoomOccupancyChart() {
                const data = await fetchChartData('/admin/room-occupancy');
                const labels = data.map(item => `${item.room_capacity} Beds (${item.room_gender})`);
                const totalCapacity = data.map(item => item.total_capacity);
                const totalOccupancy = data.map(item => item.total_occupancy);
                const bedAvail = data.map(item => item.bed_avail);

                new Chart(document.getElementById('roomOccupancyChart'), {
                  type: 'bar',
                  data: {
                    labels: labels,
                    datasets: [
                      {
                        label: 'Total Capacity',
                        data: totalCapacity,
                        backgroundColor: '#FF6384',
                      },
                      {
                        label: 'Total Occupancy',
                        data: totalOccupancy,
                        backgroundColor: '#36A2EB',
                      },
                      {
                        label: 'Available Beds',
                        data: bedAvail,
                        backgroundColor: '#FFCE56',
                      }
                    ]
                  },
                  options: {
                    scales: {
                      y: {
                        beginAtZero: true
                      }
                    }
                  }
                });
              }
              

             // state of residence Chart
            async function renderStateOfResidenceMap() {
                const data = await fetchChartData('/admin/state-of-residence');
                const stateData = {};
                data.forEach(item => {
                  stateData[item.std_state.toUpperCase()] = item.count;
                });

                // Fetch Malaysia GeoJSON data
                const response = await fetch('/malaysia-states.json');
                const statesGeoJSON = await response.json();

                // Filter the GeoJSON to include only the specified states
                const filteredGeoJSON = {
                  type: 'FeatureCollection',
                  features: statesGeoJSON.features.filter(feature =>
                    ['JOHOR', 'KEDAH', 'KELANTAN', 'MELAKA', 'NEGERI SEMBILAN', 'PAHANG', 'PULAU PINANG', 'PERAK', 'PERLIS', 'SABAH', 'SARAWAK', 'SELANGOR', 'TERENGGANU', 'KUALA LUMPUR', 'LABUAN', 'PUTRAJAYA']
                    .includes(feature.properties.name.toUpperCase())
                  )
                };

                const map = L.map('stateOfResidenceMap').setView([4.2105, 101.9758], 6); // Centered on Malaysia

                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                  maxZoom: 18,
                }).addTo(map);

                L.geoJSON(filteredGeoJSON, {
                  style: feature => {
                    const count = stateData[feature.properties.name.toUpperCase()] || 0;
                    const fillColor = count > 50 ? '#800026' :
                                      count > 20 ? '#BD0026' :
                                      count > 10 ? '#E31A1C' :
                                      count > 5  ? '#FC4E2A' :
                                      count > 0  ? '#FD8D3C' : '#FFEDA0';
                    return { fillColor, weight: 2, opacity: 1, color: 'white', dashArray: '3', fillOpacity: 0.7 };
                  },
                  onEachFeature: (feature, layer) => {
                    layer.bindPopup(`${feature.properties.name}: ${stateData[feature.properties.name.toUpperCase()] || 0} students`);
                  }
                }).addTo(map);
              }
              

          // Render all charts
          renderGenderDistributionChart();
          renderStudentsByFacultyChart();
          renderRoomEnvironmentPreferenceChart();
          renderStudentRegistrationOverTimeChart();
          renderYearOfDegreeChart();
          renderRoomTypeDistributionChart();
          renderRoomOccupancyChart();
          renderStateOfResidenceMap();
        </script>


        // Fetch and render the dashboard data when the page loads
        fetchDashboardData();
    </script>
        <script>
            function logout() {
                // Clear any client-side authentication data if necessary
                // For example, you might want to clear cookies or localStorage items
                // localStorage.removeItem('authToken');
                window.location.href = '/admin-login.html';
            }
        </script>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
